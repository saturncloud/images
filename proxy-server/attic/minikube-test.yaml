apiVersion: v1
kind: Service
metadata:
  labels:
    run: proxy-test
  name: proxy-test
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    run: proxy-test
  sessionAffinity: None
  type: NodePort
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: proxy-test
  name: proxy-test
spec:
  containers:
  - image: proxy-server:test
    imagePullPolicy: IfNotPresent
    name: proxy
    ports:
    - containerPort: 8080
      protocol: TCP
    env:
      - name: PROXY_LISTEN_PORT
        value: "8080"
      - name: PROXY_TARGET_URL
        value: "http://web-resource.default.svc.cluster.local:80"
      - name: PROXY_FALLBACK_URL
        value: "http://dev.localtest.me:8888/auth/login"
      - name: HTTPS_SELF_REDIRECT
        value: "false"
      - name: PROXY_DEBUG
        value: "true"
      - name: PROXY_SUFFIX
        value: ".localtest.me"
      - name: PROXY_CONFIG
        value: "/etc/config/proxy.json"
    volumeMounts:
    - name: config-volume
      mountPath: /etc/config
  volumes:
  - name: config-volume
    configMap:
      name: proxy-test-config
  dnsPolicy: ClusterFirst
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: proxy-test-config
data:
  proxy.json: |
    {
      "web":"http://web-resource.default.svc.cluster.local:80"
    }
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: web-resource
  name: web-resource
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    run: web-resource
  sessionAffinity: None
  type: NodePort
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: web-resource
  name: web-resource
spec:
  containers:
  - image: dockersamples/101-tutorial
    imagePullPolicy: IfNotPresent
    name: web
    ports:
    - containerPort: 80
      protocol: TCP
  dnsPolicy: ClusterFirst
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: web-resource
spec:
  rules:
    - host: web.localtest.me
      http:
        paths:
        - backend:
            serviceName: proxy-test
            servicePort: 80
